Questão 1)

  #include <iostream>
  using namespace std;

  void inverte(int *vetor,int tamanho) {
    int i,j;
    int aux;

    for(i = 0, j=tamanho - 1; i<j; ++i, --j){
      aux = *(vetor + j);
      *(vetor + j) = *(vetor + i);
      *(vetor + i) = aux;
    } 
  }

  void imprimir(int *vetor) {
    cout << "Vetor > [ ";
    for(int i=0; i < 7; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
  }

  int main(){
    int i, vetor[] = {5, 8, 1, 0, 9, 5, 3}; 
    imprimir(vetor);
    inverte(vetor, 7);
    cout << "\n";
    imprimir(vetor);
  }

Questão 2)

  #include <iostream>
  using namespace std;

  void inverte(int *vetor, int inicio, int fim) {
    if ((fim - inicio) > 0) {
      int aux = vetor[inicio];
      vetor[inicio] = vetor[fim];
      vetor[fim] = aux;
      inverte(vetor, inicio+1, fim-1);
    } else {
      return;		
    }	
  }

  void imprimir(int *vetor) {
    cout << "Vetor > [ ";
    for(int i=0; i < 7; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
  }

  int main (){
    int i, vetor[] = {5, 8, 1, 0, 9, 5, 3};
    imprimir(vetor);
    inverte(vetor, 0, 6);
    cout << "\n";
    imprimir(vetor);
    return 0;
  }

Questão 3)

  #include <iostream>
  using namespace std;

  int somaPar(int *vetor, int tamanho){
    int soma = 0;
    for(int i = 0; i < tamanho; i++){
      if (i % 2 == 0) {
        soma += vetor[i];
      }
    }
    return soma;
  }

  void inserir(int *vetor, int tamanho) {
    for(int i = 0; i < tamanho; i++){
      cout << "Insira o valor do Vetor["<< i <<"]: ";
      cin >> vetor[i];    
    } 
  } 

  void imprimir(int *vetor, int tamanho) {
    cout << "Vetor > [ ";
    for(int i=0; i < tamanho; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
  }

  int main(){
    int tamanho, vetor[tamanho], soma;

    cout << "Insira o quantos valores deseja inserir: ";
    cin >> tamanho;
    cout << "\n"; 

    inserir(vetor, tamanho);  
    soma = somaPar(vetor, tamanho);

    imprimir(vetor, tamanho);
    cout << "\nSoma dos valores do vetor: " << soma;
    return 0;
  }

Questão 4)

  #include <iostream>
  using namespace std;

  int fatorial(int i){ 
    if (i == 0){
      return 1;
    }else{
      return i*fatorial(i-1);
    }   
  }

  void armazenaFatorial(int *vetor, int tamanho) {
    for(int i = 0; i < tamanho; i++){
      vetor[i] = fatorial(i);
    }
  }

  void imprimir(int *vetor, int tamanho) {
    cout << "Vetor > [ ";
    for(int i=0; i < tamanho; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
  }

  int main() {
    int tamanho, vetor[tamanho];

    cout << "Insira o quantos valores deseja inserir: ";
    cin >> tamanho;
    cout << "\n"; 

    armazenaFatorial(vetor, tamanho); 
    imprimir(vetor, tamanho);
    cout << "\nCasa i > [ ";
    for(int i=0; i < tamanho; i++){
      cout << i << " ";
    }
    cout << "]";
  };

Questão 5)

  #include <iostream>
  using namespace std;

  int fibonacci(int numero,int x, int y)
  {
    if(numero == 0)
      return 0;
    if(numero > 1)
      return y + fibonacci(numero - 1, y, x + y);
    else
      return 1;
  }

  void armazenaFibonacci(int *vetor, int tamanho) {
    for(int i = 1; i < tamanho; i++){
      vetor[i] = fibonacci(i, 1, 0);
    }
  }

  void imprimir(int *vetor, int tamanho) {
    cout << "Vetor > [ ";
    for(int i=0; i < tamanho; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
  }

  int main() {
    int tamanho, vetor[tamanho];

    cout << "Insira o tamanho do vetor: ";
    cin >> tamanho;
    cout << "\n"; 

    armazenaFibonacci(vetor, tamanho); 
    imprimir(vetor, tamanho);
    cout << "\nCasa i > [ ";
    for(int i=1; i < tamanho; i++){
      cout << i << " ";
    }
    cout << "]";
  };

Questão 6)

  #include <iostream>
  using namespace std;

  void somaLinha(int matriz[50][50], int linha, int coluna){
    int soma = 0;

    for(int i = 0;i < linha; i++) { 
      for(int j = 0;j < coluna; j++) {
        soma += matriz[i][j];
      }
      cout << "\nSoma da linha "<< i <<" :  "<< soma;
      soma = 0;
    }
  }

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira a quantidade de linhas da matriz: ";
    cin >> linha;
    cout << "Insira a quantidade de colunas da matriz: ";
    cin >> coluna;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    somaLinha(matriz, linha, coluna);
  }

Questão 7)

  #include <iostream>
  using namespace std;

  void somaColuna(int matriz[50][50], int linha, int coluna){
    int soma = 0;

    for(int i = 0;i < coluna; i++) { 
      for(int j = 0;j < linha; j++) {
        soma += matriz[j][i];
      }
      cout << "\nSoma da coluna "<< i <<" :  "<< soma;
      soma = 0;
    }
  }

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira a quantidade de linhas da matriz: ";
    cin >> linha;
    cout << "Insira a quantidade de colunas da matriz: ";
    cin >> coluna;
    cout << "\n"; 

    for(int i = 0;i < coluna; i++) { 
      for (int j = 0;j < linha; j++) {
        cout << "Insira o valor de Matriz["<< j <<"]["<< i <<"]: ";
        cin >> matriz[j][i];
      }
    }
    somaColuna(matriz, linha, coluna);
  }

Questão 8)

  #include <iostream>
  using namespace std;

  void armazenaSoma(int matriz[50][50], int linha, int coluna, int *vetorLinha, int *vetorColuna){
    int somaLinha, somaColuna = 0;


    for(int i = 0;i < linha; i++) { 
      for(int j = 0;j < coluna; j++) {
        somaLinha += matriz[i][j];
      }
      vetorLinha[i] = somaLinha;
      somaLinha = 0;
    }
    for(int i = 0;i < coluna; i++) { 
      for(int j = 0;j < linha; j++) {
        somaColuna += matriz[j][i];
      }
      vetorColuna[i] = somaColuna;
      somaColuna = 0;
    }
  }

  void imprimir(int *vetor, int tamanho) {
    cout << "Vetor > [ ";
    for(int i=0; i < tamanho; i++){
      cout << vetor[i] << " ";
    }
    cout << "]";
    cout << "\n";
  }

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;
    int vetorLinha[50], vetorColuna[50];

    cout << "Insira a quantidade de linhas da matriz: ";
    cin >> linha;
    cout << "Insira a quantidade de colunas da matriz: ";
    cin >> coluna;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    armazenaSoma(matriz, linha, coluna, vetorLinha, vetorColuna);
    cout << "\nSoma linha: ";
    imprimir(vetorLinha, linha);
    cout << "\nSoma coluna ";
    imprimir(vetorColuna, coluna);
  }

Questão 9)

  #include <iostream>
  using namespace std;

  int somaDiagonalPrincipal(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i == j) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaDiagonalPrincipal(matriz, linha);
    cout << "\nSoma da diagonal principal: " << soma;
  }

Questão 10)

  #include <iostream>
  using namespace std;

  int somaCimaDiagonalPrincipal(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i < j) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaCimaDiagonalPrincipal(matriz, linha);
    cout << "\nSoma acima da diagonal principal: " << soma;
  }

Questão 11)

  #include <iostream>
  using namespace std;

  int somaBaixoDiagonalPrincipal(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i > j) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaBaixoDiagonalPrincipal(matriz, linha);
    cout << "\nSoma abaixo da diagonal principal: " << soma;
  }

Questão 12)

  #include <iostream>
  using namespace std;

  int somaDiagonalSecundaria(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i + j == tamanho - 1) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaDiagonalSecundaria(matriz, linha);
    cout << "\nSoma da diagonal secundaria: " << soma;
  }

Questão 13)

  #include <iostream>
  using namespace std;

  int somaCimaDiagonalSecundaria(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i + j < tamanho - 1) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaCimaDiagonalSecundaria(matriz, linha);
    cout << "\nSoma acima da diagonal secundaria: " << soma;
  }

Questão 14)

  #include <iostream>
  using namespace std;

  int somaBaixoDiagonalSecundaria(int matriz[50][50], int tamanho){
    int soma = 0;

    for(int i = 0;i < tamanho; i++) { 
      for(int j = 0;j < tamanho; j++) {
        if(i + j >= tamanho) {
          soma += matriz[i][j];
        }
      }
    }
    return soma;
  };

  int main() {
    int matriz[50][50];
    int linha, coluna, soma;

    cout << "Insira o tamanho da matriz: ";
    cin >> linha;
    coluna=linha;
    cout << "\n"; 

    for(int i = 0;i < linha; i++) { 
      for (int j = 0;j < coluna; j++) {
        cout << "Insira o valor de Matriz["<< i <<"]["<< j <<"]: ";
        cin >> matriz[i][j];
      }
    }
    soma = somaBaixoDiagonalSecundaria(matriz, linha);
    cout << "\nSoma abaixo da diagonal secundaria: " << soma;
  }

Questão 15)

  #include <iostream>
  using namespace std;

  void TrianguloPascal(int n, int matriz[10][10]) {
    int i, j;

    for(i = 0;i < n;i++) {
      for(j = 0;j < n;j++) {
        matriz[i][j] = 0;
      }
    }    

    for(i = 0;i < n;i++) {
      matriz[i][0] = 1;
    }

    for(i = 1;i < n;i++) {
      for(j = 1;j < n;j++) {
        matriz[i][j] = matriz[i-1][j] + matriz[i-1][j-1];
      }
    }

    for(i = 0;i < n;i++) {
      for(j = 0;j < n;j++) {
        if (matriz[i][j] != 0){
          cout << matriz[i][j] << " ";
        }
      }
      cout << "\n";
    }
  };

  int main (){
    int n, matriz[10][10];
    cout << "Linhas do Triângulo: ";
    cin >> n;
    cout << "------------ TRIANGULO DE PASCAL ---------------- \n";
    TrianguloPascal(n, matriz);
  }