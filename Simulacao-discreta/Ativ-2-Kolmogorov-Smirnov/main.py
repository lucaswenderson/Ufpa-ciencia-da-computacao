import statistics as st
import math 
import plot
import numpy as np

outilierExt = []
data = [
  64, 67, 94, 89, 119, 70, 81, 104, 89, 61, 93, 79, 84, 
  76, 58, 84, 99, 83, 111, 87, 72, 104, 55, 76, 102, 100, 
  88, 86, 75, 89, 92, 67, 99, 86, 116, 60, 46, 110, 104, 
  87, 104, 68, 88, 94, 48, 99, 91, 88, 99, 57, 78, 65, 
  74, 82, 79, 115, 71, 54, 114, 93, 96, 60, 111, 104, 114, 
  78, 127, 60, 82, 131, 71, 111, 101, 120, 91, 84, 80, 113, 
  87, 104, 81, 134, 71, 112, 74, 66, 69, 83, 90, 79, 98, 
  88, 124, 47, 97, 108, 78, 104, 49, 122, 101, 91, 75, 45, 
  91, 89, 88, 78, 84, 102, 72, 78, 92, 116, 79, 103, 65, 
  101, 29, 87, 71, 127, 230, 94, 79, 80, 75, 74, 88, 27, 
  50, 86, 87, 77, 114, 95, 77, 87, 96, 101, 78, 105, 58, 
  70, 70, 99, 62, 81, 93, 87, 87, 90, 87, 82, 117, 68, 
  72, 118, 95, 127, 106, 88, 81, 109, 104, 108, 114, 96, 94, 
  111, 69, 108, 101, 55, 92, 89, 84, 38, 54, 55, 79, 77, 
  127, 79, 49, 62, 104, 88, 59, 84, 126, 54, 101, 79, 79, 
  100, 89, 100, 70, 85, 54, 315, 
]


amplitudeInterquartil = st.quantiles(data)[2] - st.quantiles(data)[0]
print("Amplitude Interquartil:", amplitudeInterquartil)

outlierModMin = st.quantiles(data)[0] - 1.5 * amplitudeInterquartil
outlierModMax = st.quantiles(data)[2] + 1.5 * amplitudeInterquartil
outlierExtMin = st.quantiles(data)[0] - 3 * amplitudeInterquartil
outlierExtMax = st.quantiles(data)[2] + 3 * amplitudeInterquartil

print("Outlier Moderado Minimo:", outlierModMin)
print("Outlier Moderado Maximo:", outlierModMax)
print("Outlier Extremo Minimo:", outlierExtMin)
print("Outlier Extremo Maximo:", outlierExtMax)
print()
for i in data:
    if (i < outlierModMin) or (i > outlierModMax):
        print("Outlier Moderado:", i)
print()
for i in data:
    if (i < outlierExtMin) or (i > outlierExtMax):
        print("Outlier Extremo:", i)
        outilierExt.append(i)

for i in outilierExt:
    data.remove(i)
  
nClasses = round(1 + (3.3 * math.log10(len(data))))
tamanhoClasse = (max(data) - min(data)) / nClasses
Lambda = 1 / st.mean(data) 
dCritico = 1.36 / math.sqrt(len(data))


print("\nTamanho das classes: %.4f" %tamanhoClasse)
print("Maximo:",max(data),"Minimo:",min(data))
print("Lambda:",Lambda)
print("Desvio Padrão:", st.stdev(data))
print("Desvio Padrão(log):", st.stdev(np.log(data)))
print("Media:", st.mean(data))
print("Media(log):", st.mean(np.log(data)))
print("D Critico:",dCritico,"\n")

frequencia = [0 for i in range(0, 135)]
for i in data:
  frequencia[i] += 1
print(frequencia)
observado = [0.005, 0.005, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.02, 0.025, 0.03, 0.035, 0.045, 0.05, 0.05, 0.05, 0.05, 0.07, 0.085, 0.085, 0.09, 0.1, 0.105, 0.12, 0.125, 0.135, 0.135, 0.14, 0.15, 0.155, 0.165, 0.175, 0.185, 0.205, 0.225, 0.24, 0.24, 0.255, 0.27, 0.28, 0.295, 0.325, 0.37, 0.38, 0.4, 0.415, 0.425, 0.455, 0.46, 0.475, 0.52, 0.56, 0.59, 0.6, 0.62, 0.635, 0.65, 0.67, 0.68, 0.695, 0.7, 0.705, 0.73, 0.745, 0.775, 0.785, 0.79, 0.835, 0.84, 0.845, 0.845, 0.86, 0.865, 0.87, 0.89, 0.895, 0.9, 0.92, 0.925, 0.935, 0.94, 0.945, 0.95, 0.955, 0.955, 0.96, 0.96, 0.965, 0.965, 0.97, 0.99, 0.99, 0.99, 0.99, 0.995, 0.995, 0.995, 1]

teoricoNormal = [
0.001772968, 0.002073188, 0.002418832, 0.002815813, 0.003270654, 0.003790533, 0.004383314, 0.005057591, 0.005822715, 0.006688833, 0.007666909, 0.008768751, 0.010007025, 0.011395265, 0.01294788, 0.014680142, 0.016608173, 0.01874892, 0.021120116, 0.023740232, 0.026628412, 0.029804399, 0.033288447, 0.037101214, 0.041263647, 0.045796848, 0.050721931, 0.056059861, 0.061831285, 0.068056351, 0.074754514, 0.081944338, 0.08964329, 0.097867529, 0.106631698, 0.115948705, 0.125829525, 0.136282992, 0.147315607, 0.158931362, 0.171131568, 0.183914714, 0.197276332, 0.211208902, 0.225701764, 0.240741073, 0.256309777, 0.272387621, 0.28895119, 0.305973986, 0.323426526, 0.341276483, 0.359488855, 0.378026163, 0.396848676, 0.415914666, 0.435180681, 0.454601845, 0.474132166, 0.493724868, 0.513332723, 0.532908392, 0.552404771, 0.571775328, 0.590974436, 0.609957696, 0.628682244, 0.64710704, 0.665193135, 0.682903919, 0.700205329, 0.717066047, 0.733457649, 0.749354735, 0.764735024, 0.779579409, 0.793871994, 0.807600083, 0.820754157, 0.833327802, 0.845317629, 0.856723159, 0.867546687, 0.877793126, 0.88746984, 0.896586455, 0.905154667, 0.913188032, 0.920701764, 0.927712516, 0.934238174, 0.940297648, 0.945910663, 0.951097569, 0.955879148, 0.960276437, 0.964310565, 0.968002592, 0.971373377, 0.974443445, 0.977232877, 0.97976121, 0.982047354, 0.984109521, 0.985965165, 0.987630941, 0.989122666, 0.990455305
]

#plot.doublePlot(observado, teoricoNormal)

